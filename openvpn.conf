# Configure the OpenVPN server's tunnel subnet.
server 10.8.0.0 255.255.255.0
topology subnet
verb 3

# mTLS configuration.
key /etc/openvpn/server/server.key
cert /etc/openvpn/server/server.crt
ca /etc/openvpn/ca/rootCA.crt
dh /etc/openvpn/server/dh.pem
tls-auth /etc/openvpn/server/ta.key

# Configure key-exchange to be on the client and traffic decryption
# happens on the server side.
key-direction 0

# Configure keepalive setting on the server for which to send keepalive
# packets to the client and when to timeout and re-attempt connection.
keepalive 10 60

# Persists the private key in-memory for security purposes.
persist-key

# Whether OpenVPN should retain the virtual tunnel (TUN/TAP)
# interface and associated IP address settings when the connection
# is disconnected or restarted.
persist-tun

# Rely on Docker to do port mapping, internally always 1194
port 1194
dev tun0
proto udp
status /etc/openvpn/status.log

user nobody
group nobody

## Server Configurations.
# Disable LZO data compression on the server.
comp-lzo no

### Server Route Configurations below
# Add a route on the server which resolves the tunnel's subnet.
route 10.8.0.0 255.255.255.0

# If the user would like to have access to the local network, add a route
# on the server to resolve to the local network gateway.
# route 192.168.0.0 255.255.255.0 net_gateway

## Client Configurations.
### Push Configurations to the client
# Disable LZO compression on the client.
push "comp-lzo no"

# Configure DNS
'block-outside-dns' is Windows-only. So expect a warning on the client.
push "block-outside-dns"
push "dhcp-option DNS 1.1.1.1"
push "dhcp-option DNS 8.8.8.8"

# Maintain a record of client <-> virtual IP address
# associations in this file.  If OpenVPN goes down or
# is restarted, reconnecting clients can be assigned
# the same virtual IP address from the pool that was
# previously assigned.
ifconfig-pool-persist ipp.txt

# Notify the client that when the server restarts so it
# can automatically reconnect.
explicit-exit-notify 1

### Client Route Configurations below
# Pushs routes to be added on the connected client's tunnel interface.
# Local network scope access can be exposed to server's local network
# by pushing the local network route to the client.
# Assuming local network is under 192.168.0.0/24.
# push "route 192.168.0.0 255.255.255.0"

# Push a route to the client for which to resolve to the public internet.
# This subnet should be the one present on the server's public facing interface.
# Assuming public network is under 222.222.222.0/24.
push "route 222.222.222.0 255.255.255.0"

# Route all traffic on the client through the established tunnel.
#
# 'redirect-gateway def1' adds a default route on the client to
# resolve through the client's tunnel interface.
#
# 'bypass-dhcp' disables modifying the client's DNS settings received
# from the DHCP server.
push "redirect-gateway def1 bypass-dhcp"

